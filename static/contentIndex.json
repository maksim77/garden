{"index":{"title":"index","links":["notes/Development/YandexGPT-в-Obsidian-TextGenerator"],"tags":[],"content":"Index\n\nYandexGPT в Obsidian TextGenerator\n"},"notes/Development/Draft-actions":{"title":"Draft actions","links":["notes/Development/Draft-actions"],"tags":[],"content":"Draft actions\nI really like the Draft app, and I have written a number of actions for it. I wrote them for myself, but some of them seemed interesting enough for me to share with everyone.\n\nMastodon Reply - simple action that allows you to reply to Mastodon toot directly from within Draft.\nCalendar - this action takes all of today’s events from the calendar and creates a markdown for Obsidian Daily Notes.\n"},"notes/Development/Git-user-checks":{"title":"Git user checks","links":["notes/Development/Git-user-checks"],"tags":[],"content":"Git user checks\n\nVSCode Marketplace\nGitHub\n\nSometimes, after cloning a repository from a corporate git server and sending several commits to it, you realize that you forgot to change the user settings in git.\nThis extension was written to avoid that.\nYou only need to define three parameters. The first is the domain that the extension will look for in the origin section of the repository that you opened in VSCode.\nThe other two are user settings that need to be set for the repository cloned from the domain specified in the first paragraph.\n\nThat’s it! The extension will warn you that you are working with a repository for which user settings should be set (if they are not already set). Clicking the “Overwrite” button will automatically add the necessary parameters to the git settings of the current project.\n"},"notes/Development/YandexGPT-в-Obsidian-TextGenerator":{"title":"YandexGPT в Obsidian TextGenerator","links":["notes/Development/YandexGPT-в-Obsidian-TextGenerator","notes/Development/Получение-IAM_TOKEN-в-YC","notes/Development/Получение-API-ключа-в-YC"],"tags":[],"content":"YandexGPT в Obsidian TextGenerator\nДля того чтобы работать с API YandexGPT необходимо быть зарегистрированным в Yandex Cloud и иметь действующий платежный аккаунт.\nДля авторизации в API потребуется либо IAM токен либо API ключ.\n\nПолучение IAM_TOKEN в YC\nПолучение API ключа в YC\n\nObsidian\n\nУстановить плагин TextGenerator\nВыбрать Provider Profile - Custom или клонировать его нажав +\n\nВ поле Endpoint указать llm.api.cloud.yandex.net/foundationModels/v1/completion\nВ поле API Key указать либо IAM_TOKEN либо API ключ полученный ранее\n\nAdvanced mode\nДальнейшие пункты настраиваются после включения переключателя Advanced mode.\n\nВ секции Headers указываем следующее при использовании ключа API.\n\n{\n    &quot;Content-Type&quot;: &quot;application/json&quot;,\n    &quot;Authorization&quot;: &quot;Api-Key {{api_key}}&quot;, \n    &quot;x-folder-id&quot;: &quot;b1gjpq05r3ppsou34c7d&quot;\n}\nИли вот так при при использовании IAM токена:\n{\n    &quot;Content-Type&quot;: &quot;application/json&quot;,\n    &quot;Authorization&quot;: &quot;Bearer {{api_key}}&quot;, \n    &quot;x-folder-id&quot;: &quot;b1gjpq05r3ppsou34c7d&quot;\n}\nВ x-folder-id необходимо подставить идентификатор того каталога для которого создавался ключ/токен.\n\nВ секции Body пропишем тело запроса\n\n{\n  &quot;modelUri&quot;: &quot;gpt://b1gjpq05r3ppsou34c7d/yandexgpt/latest&quot;,\n  &quot;completionOptions&quot;: {\n    &quot;stream&quot;: false,\n    &quot;temperature&quot;: {{temperature}},\n    &quot;maxTokens&quot;: {{max_tokens}}\n  },\n  &quot;messages&quot;:  [{&quot;text&quot;:  {{stringify tg_selection}}, &quot;role&quot;:&quot;user&quot;}] \n}\nГде modelUri это адрес модели выключающий в себя идентификатор каталога из шагов выше. Список существующих моделей можно посмотреть тут.\n\nВ секции Response Sanatization прописываем обработчик ответов API:\n\nif (res.status &gt;= 300) {\n  const err = data?.error?.message || JSON.stringify(data);\n  throw err;\n}\n \nconst choices = data.result.alternatives.map(c =&gt; ({ content: c.message.text }));\n \nreturn choices;\n\nОбязательно устанавливаем галочку CORS Bypass\n"},"notes/Development/Получение-API-ключа-в-YC":{"title":"Получение API ключа в YC","links":["notes/Development/Получение-API-ключа-в-YC","notes/Development/Получение-списка-Service-Account-в-YC"],"tags":[],"content":"Получение API ключа в YC\nЭто инструкция по созданию API-ключа для сервисного аккаунта. API-ключ — секретный ключ, используемый для упрощенной авторизации в API Yandex Cloud.\nЕсли у вас еще нет сервисного аккаунта, создайте его и назначьте ему роли.\nЧтобы создать API-ключ:\n\nСоздайте API-ключ с помощью метода REST API create для ресурса ApiKey:\n\nexport SERVICEACCOUNT_ID=&lt;идентификатор_сервисного_аккаунта&gt;\nexport IAM_TOKEN=&lt;токен&gt;\ncurl -X POST \\\n  -H &quot;Content-Type: application/json&quot; \\\n  -H &quot;Authorization: Bearer $IAM_TOKEN&quot; \\\n  -d &quot;{\n      \\&quot;serviceAccountId\\&quot;: \\&quot;$SERVICEACCOUNT_ID\\&quot;,\n      \\&quot;scope\\&quot;: \\&quot;&lt;область_действия&gt;\\&quot;,\n      \\&quot;expiresAt\\&quot;: \\&quot;&lt;дата_и_время&gt;\\&quot;\n  }&quot; \\\n  iam.api.cloud.yandex.net/iam/v1/apiKeys\nГде:\n\nSERVICEACCOUNT_ID — идентификатор сервисного аккаунта. Обязательный параметр.\nIAM_TOKEN — IAM-токен. Обязательный параметр.\nscope — область действия для ключа с ограниченным доступом. Необязательный параметр.\nexpiresAt — дата и время истечения срока действия ключа с ограниченным доступом. Необязательный параметр.\n"},"notes/Development/Получение-IAM_TOKEN-в-YC":{"title":"Получение IAM_TOKEN в YC","links":["notes/Development/Получение-IAM_TOKEN-в-YC"],"tags":[],"content":"Получение IAM_TOKEN в YC\n\nВойдите- в ваш аккаунт на Яндексе.\nПолучите OAuth-токен в сервисе Яндекс.OAuth. Для этого перейдите по ссылке, нажмите Разрешить и скопируйте полученный OAuth-токен.\nОбменяйте OAuth-токен на IAM-токен:\n\ncurl -X POST \\\n  -d &#039;{&quot;yandexPassportOauthToken&quot;:&quot;&lt;OAuth-токен&gt;&quot;}&#039; \\\n  iam.api.cloud.yandex.net/iam/v1/tokens"},"notes/Development/Получение-списка-Service-Account-в-YC":{"title":"Получение списка Service Account в YC","links":["notes/Development/Получение-списка-Service-Account-в-YC","notes/Development/Получение-IAM_TOKEN-в-YC"],"tags":[],"content":"Получение списка Service Account в YC\nНеобходимо получить IAM_TOKEN и знать идентификатор каталога (FOLDER_ID).\nexport FOLDER_ID=b1gvmob95yys********\nexport IAM_TOKEN=CggaATEVAgA...\ncurl -H &quot;Authorization: Bearer ${IAM_TOKEN}&quot; \\\n  &quot;iam.api.cloud.yandex.net/iam/v1/serviceAccounts${FOLDER_ID}&quot;\n \n{\n &quot;serviceAccounts&quot;: [\n  {\n   &quot;id&quot;: &quot;ajebqtreob2d********&quot;,\n   &quot;folderId&quot;: &quot;b1gvmob95yys********&quot;,\n   &quot;createdAt&quot;: &quot;2018-10-18T13:42:40Z&quot;,\n   &quot;name&quot;: &quot;my-robot&quot;,\n   &quot;description&quot;: &quot;my description&quot;\n  }\n ]\n}"}}